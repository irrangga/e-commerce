// Code generated by MockGen. DO NOT EDIT.
// Source: ./internal/usecase/warehouse/init.go
//
// Generated by this command:
//
//	mockgen -source=./internal/usecase/warehouse/init.go -destination ./gen/mocken/usecase/warehouse/mock.go
//

// Package mock_warehouse is a generated GoMock package.
package mock_warehouse

import (
	context "context"
	entity "e-commerce/internal/entity"
	reflect "reflect"

	gomock "go.uber.org/mock/gomock"
)

// MockRepoInterface is a mock of RepoInterface interface.
type MockRepoInterface struct {
	ctrl     *gomock.Controller
	recorder *MockRepoInterfaceMockRecorder
}

// MockRepoInterfaceMockRecorder is the mock recorder for MockRepoInterface.
type MockRepoInterfaceMockRecorder struct {
	mock *MockRepoInterface
}

// NewMockRepoInterface creates a new mock instance.
func NewMockRepoInterface(ctrl *gomock.Controller) *MockRepoInterface {
	mock := &MockRepoInterface{ctrl: ctrl}
	mock.recorder = &MockRepoInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockRepoInterface) EXPECT() *MockRepoInterfaceMockRecorder {
	return m.recorder
}

// CreateWarehouse mocks base method.
func (m *MockRepoInterface) CreateWarehouse(ctx context.Context, input entity.CreateWarehouse) (entity.Warehouse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateWarehouse", ctx, input)
	ret0, _ := ret[0].(entity.Warehouse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateWarehouse indicates an expected call of CreateWarehouse.
func (mr *MockRepoInterfaceMockRecorder) CreateWarehouse(ctx, input any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateWarehouse", reflect.TypeOf((*MockRepoInterface)(nil).CreateWarehouse), ctx, input)
}

// DeleteWarehouse mocks base method.
func (m *MockRepoInterface) DeleteWarehouse(ctx context.Context, id string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteWarehouse", ctx, id)
	ret0, _ := ret[0].(error)
	return ret0
}

// DeleteWarehouse indicates an expected call of DeleteWarehouse.
func (mr *MockRepoInterfaceMockRecorder) DeleteWarehouse(ctx, id any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteWarehouse", reflect.TypeOf((*MockRepoInterface)(nil).DeleteWarehouse), ctx, id)
}

// GetWarehouse mocks base method.
func (m *MockRepoInterface) GetWarehouse(ctx context.Context, id string) (entity.Warehouse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetWarehouse", ctx, id)
	ret0, _ := ret[0].(entity.Warehouse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetWarehouse indicates an expected call of GetWarehouse.
func (mr *MockRepoInterfaceMockRecorder) GetWarehouse(ctx, id any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetWarehouse", reflect.TypeOf((*MockRepoInterface)(nil).GetWarehouse), ctx, id)
}

// UpdateWarehouse mocks base method.
func (m *MockRepoInterface) UpdateWarehouse(ctx context.Context, input entity.UpdateWarehouse) (entity.Warehouse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UpdateWarehouse", ctx, input)
	ret0, _ := ret[0].(entity.Warehouse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// UpdateWarehouse indicates an expected call of UpdateWarehouse.
func (mr *MockRepoInterfaceMockRecorder) UpdateWarehouse(ctx, input any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateWarehouse", reflect.TypeOf((*MockRepoInterface)(nil).UpdateWarehouse), ctx, input)
}
